[
  {
    "objectID": "posts/markdown-image-workflow.html",
    "href": "posts/markdown-image-workflow.html",
    "title": "A Quick Workflow for Incorporating Images into your Markdown Documents using VS Code",
    "section": "",
    "text": "For the past year and a half, I have been experimenting with my digital note-taking setup, ranging from live typesetting LaTeX to Apple Notes. I don’t think I can find a perfect solution that meets all my needs. But I think we can get close. I plan to make a bigger post describing my setup in more detail (in a similar fashion to castel.dev), but one of the main components is what we discuss here: how to use VS Code to incorporate images into your Markdown documents. We use Markdown because it supports things like embedded LaTeX math and code fences (such features are pivotal when taking technical notes during class)."
  },
  {
    "objectID": "posts/markdown-image-workflow.html#the-standard-workflow",
    "href": "posts/markdown-image-workflow.html#the-standard-workflow",
    "title": "A Quick Workflow for Incorporating Images into your Markdown Documents using VS Code",
    "section": "The standard workflow",
    "text": "The standard workflow\nIncorporating images is a necessary function to have when typing notes, live, during lecture. And not only that, we need to do this fast. This is problematic in plain markdown because it requires us to…\n\nDownload the image file and save it to some path\nSpecify the path relative to your document like so: ![alt text](../some_long/path/im.png) in the document itself.\n\nIn some ways, you’d be done there. But… most figures are quite large and take up majority of the page…\n\n\n\nno good! And guess what? There is no standard way to resize images in markdown! So you’d have to specify an HTML element like so:\n<img src=\"http://www.fillmurray.com/460/300\">\nFrom here, you could in theory add image alignment and sizing, but this still takes another ~45 seconds:\n<p align=\"center\">\n    <img alt=\"picture 1\" src=\"http://www.fillmurray.com/460/300\" width=\"350\" />  \n</p>\nIn all, this whole process probably takes ~2 minutes per image. And if you are typing live during a lecture, you’ll quickly be lost in the content and won’t be able to keep up with the lecturer. For these reasons, after playing around with various ideas, I describe a new workflow below."
  },
  {
    "objectID": "posts/markdown-image-workflow.html#a-new-efficient-workflow",
    "href": "posts/markdown-image-workflow.html#a-new-efficient-workflow",
    "title": "A Quick Workflow for Incorporating Images into your Markdown Documents using VS Code",
    "section": "A new, efficient workflow",
    "text": "A new, efficient workflow\nFirst of all, this workflow is powered by:\n\nVS Code (necessary to use due to the use of the extension listed below)\nMarkdown Image VS Code extension by Hancel.Lin (link)\n\nThe main philosophy:\n\nWe want to upload the images on a remote server and retrieve a URL in return. We will use this as the path since it eliminates the need to download, save, and specify the path locally.\n\nWe use a public Github repo to upload the images to automatically. This allows us to store our images on Github’s servers and retrieve a URL on the internet.\n\nNote: You can also use this setup with some other CDN delivery network that the Markdown Image extension allows for (such as Cloudflare). But I personally think Github is the safest and best option.\n\n\n\n\nSetup\n\nMake a new Github repo to store the images.\nOpen up the config settings for the above extension in VS Code. Specify the following fields based on your account info and repo:\n\nbranch\npath (i.e., the folder inside your GH repo where you want to store the images)\nrepository name\ntoken (your personal access token)\n\nNow change the base upload method field to ‘Github’ in the extension settings.\n(Optional) while you are at it, you can also change the base image width in the extension settings, the code type (I prefer the HTML string over raw Markdown since it renders nicely in Github’s web interface), the max image width (I use 300-400).\n(Optional) if you want center-alignment, make a VS Code snippet with the following code:\n\n<p align=\"center\">\n     \n</p>\nand then paste your image in between the element block dividers.\nAnd that’s it! All you need to do is copy an image to your clipboard (i.e., from a screenshot) and paste it in using the extension by right-clicking and select (if enabled and there is other extensions overwriting the command):\n\n\n\ndone! Now your image uploading should take about ~5 seconds (a much better improvement from ~2 minutes!)."
  },
  {
    "objectID": "posts/archived/wow.html",
    "href": "posts/archived/wow.html",
    "title": "Some quarto notes",
    "section": "",
    "text": "Red\nGreen\nBlue"
  },
  {
    "objectID": "posts/archived/wow.html#shapes",
    "href": "posts/archived/wow.html#shapes",
    "title": "Some quarto notes",
    "section": "Shapes",
    "text": "Shapes\n\nSquare\nCircle\nTriangle"
  },
  {
    "objectID": "posts/archived/wow.html#textures",
    "href": "posts/archived/wow.html#textures",
    "title": "Some quarto notes",
    "section": "Textures",
    "text": "Textures\n\nSmooth\nBumpy\nFuzzy"
  },
  {
    "objectID": "posts/archived/wow.html#physics",
    "href": "posts/archived/wow.html#physics",
    "title": "Some quarto notes",
    "section": "Physics",
    "text": "Physics\nEinstein’s theory of special relatively that expresses the equivalence of mass and energy: E = mc^{2}. See Equation 1 to better understand standard deviation.\nbetter understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard better understand standard\nEven more so:\n\n4x + 5 = 6\n\\tag{1}\n\nLike wow!wmqwldqwwe\n\nAnd wow! Even add callout:\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important. Some math 4 involved: \n4x+3=2\n\\\\\n4x=-1\n\\\\\nx=\\frac{-1}{4}\n\nAnd some code:\nprint(5)\n\n\nOh how cool."
  },
  {
    "objectID": "posts/archived/wow.html#rendering-code",
    "href": "posts/archived/wow.html#rendering-code",
    "title": "Some quarto notes",
    "section": "Rendering code",
    "text": "Rendering code\n\ns\n\n\nThis is awspan that has the class aside which places it in the margin without a footnote number.wljekw\nns qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. sqwdl,mqwqwdl,mqw qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk. s qmnmwne,mqw qwkjdklqwkdqk."
  },
  {
    "objectID": "zebras/mignot.html",
    "href": "zebras/mignot.html",
    "title": "Mignot Lab Research",
    "section": "",
    "text": "For the past year and a half, I have been experimenting with my digital note-taking setup, ranging from live typesetting LaTeX to Apple Notes. I don’t think I can find a perfect solution that meets all my needs. But I think we can get close. I plan to make a bigger post describing my setup in more detail (in a similar fashion to castel.dev), but one of the main components is what we discuss here: how to use VS Code to incorporate images into your Markdown documents. We use Markdown because it supports things like embedded LaTeX math and code fences (such features are pivotal when taking technical notes during class)."
  },
  {
    "objectID": "zebras/m.html",
    "href": "zebras/m.html",
    "title": "Mignosst Lab Research",
    "section": "",
    "text": "For the past year and a half, I have been experimenting with my digital note-taking setup, ranging from live typesetting LaTeX to Apple Notes. I don’t think I can find a perfect solution that meets all my needs. But I think we can get close. I plan to make a bigger post describing my setup in more detail (in a similar fashion to castel.dev), but one of the main components is what we discuss here: how to use VS Code to incorporate images into your Markdown documents. We use Markdown because it supports things like embedded LaTeX math and code fences (such features are pivotal when taking technical notes during class)."
  },
  {
    "objectID": "zebras/mm.html",
    "href": "zebras/mm.html",
    "title": "Mignot Lab Ressearch",
    "section": "",
    "text": "For the past year and a half, I have been experimenting with my digital note-taking setup, ranging from live typesetting LaTeX to Apple Notes. I don’t think I can find a perfect solution that meets all my needs. But I think we can get close. I plan to make a bigger post describing my setup in more detail (in a similar fashion to castel.dev), but one of the main components is what we discuss here: how to use VS Code to incorporate images into your Markdown documents. We use Markdown because it supports things like embedded LaTeX math and code fences (such features are pivotal when taking technical notes during class)."
  },
  {
    "objectID": "port.html",
    "href": "port.html",
    "title": "Test grid portfolio",
    "section": "",
    "text": "Mignosst Lab Research\n\n\n\nSep 30, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMignot Lab Research\n\n\n\nSep 30, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMignot Lab Ressearch\n\n\n\nSep 30, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rohan Sikand",
    "section": "",
    "text": "New\n\nrsbox"
  },
  {
    "objectID": "experience.html",
    "href": "experience.html",
    "title": "Experience",
    "section": "",
    "text": "B.S. Computer Science • 2020 – 2024 • Stanford, CA\n\nSelected coursework: CS 221 (AI, in progress), CS 330 (Meta Learning, in progress), CS 107 (Computer Systems), ENGR 108 (Matrix Methods), CS 109 (Probability), CS 111 (Operating Systems), CS 279 (Computational Biology), CS 103 (Theory of Computing), Math 51 (Linear Algebra + Multivariable Calculus). See here for more."
  },
  {
    "objectID": "experience.html#experience",
    "href": "experience.html#experience",
    "title": "Experience",
    "section": "Experience",
    "text": "Experience\n\n Machine Learning Engineering Intern at insitro\nJune 2022 – September 2022 • South San Francisco, CA\n\nConducted cross-disciplinary neuron segmentation project using machine learning for the purposes of flourescent phenotyping and disease modeling. Deployed models with an API. Used ViT, DINO, Segformer, DeepLabV3, etc.\nGained experience working with industry tools such as Amazon AWS EC2 & Batch, Weights & Biases.\nSee here for more details."
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "This page contains overviews and links for most of my technical work done over the years.\nIt needs to be updated… so for now, visit https://rosikand.github.io/old-websites/portfolio.html."
  },
  {
    "objectID": "portfolio.html#research",
    "href": "portfolio.html#research",
    "title": "Portfolio",
    "section": "🧪 Research",
    "text": "🧪 Research\nMy research interests include deep learning and its applications to fields such as computer vision and medicine.\n\n\n\n\n\n\n\n\n\n\nRegistration of the T2 and DWI b1200 MRI Sequences of the Prostate\nParticipated in the Canary CREST research program at Stanford Medicine (Urologic Cancer Innovation Lab). There, I conducted a research project involving the registration of the T2 and DWI b1200 MRI Sequences of the Prostate using classical and deep learning methods.  Skills: PyTorch, computer vision, deformable fields, neural networks, affine transformations  [paper] [poster] [code]\n\n\n\n\n\n\n\n\n\n\n\nStanford ACMLab Projects\nApplying ML concepts to projects with peers.\n\n\n“Team Stanford ACMLab at SemEval 2022 Task 4: Textual Analysis of PCL Using Contextual Word Embeddings” (paper)\n\n\nDeveloped benchmark tests for large language models: ”Logic grid puzzles” RG, WZ, RS, JK, EC, JT (2021). WELM@ICLR (Spotlight). Published in “Beyond the Imitation Game: Quantifying and extrapolating the capabilities of language models” (arXiv).\n\n\n”Mapping Income Distribution with Machine Learning” (link).\n\n\n\n\n\n\n\n\n\n\n\n\n\nLSTMs and Fully-Connected Dense Neural Networks for speech classification in sleep sounds\nDuring my first year at Stanford, I was a research intern in the Mignot Lab at Stanford School of Medicine. I conducted a project involving the use of sequence-based deep learning architectures, such as Long short-term memory networks, to classify sleep sounds via mel spectogram representations of audio waves.  Skills: Keras, Tensorflow, Librosa, neural networks  [code]"
  },
  {
    "objectID": "portfolio.html#projects",
    "href": "portfolio.html#projects",
    "title": "Portfolio",
    "section": "🛶 Projects",
    "text": "🛶 Projects\nHere are some other projects.\n\n🍽 torchplate: A minimal experiment framework for machine learning workflows in PyTorch."
  },
  {
    "objectID": "archived/research.html",
    "href": "archived/research.html",
    "title": "Research",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "archived/projects.html",
    "href": "archived/projects.html",
    "title": "Projects",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "pages/insitro.html",
    "href": "pages/insitro.html",
    "title": "Insitro Internship - Summer 2022",
    "section": "",
    "text": "Machine Learning Engineering Intern - insitro, Summer 2022"
  },
  {
    "objectID": "pages/insitro.html#experience",
    "href": "pages/insitro.html#experience",
    "title": "Insitro Internship - Summer 2022",
    "section": "Experience",
    "text": "Experience\nIn the Summer of 2022, I interned at insitro, an ML-powered drug discovery company, led by Daphne Koller. My experience was nothing short of amazing, and I definately learned a ton. While I had a lot of machine learning engineering experience prior to coming to insitro, I lacked knowledge of industry tools. At insitro, I was able to broaden my horizons and learn about concepts such as Amazon AWS, EC2, Batch; Weights and Biases; Git and Github pull requests; PyTorch distributed; and much more."
  },
  {
    "objectID": "pages/insitro.html#project",
    "href": "pages/insitro.html#project",
    "title": "Insitro Internship - Summer 2022",
    "section": "Project",
    "text": "Project\nIn this section, I give a brief overview of the project I conducted during my time at insitro.\n\nProject title: “Exploring Experimental Machine Learning Strategies for Improving Neuron Segmentation Models”"
  },
  {
    "objectID": "pages/coursework.html",
    "href": "pages/coursework.html",
    "title": "Coursework",
    "section": "",
    "text": "CS 111: Operating Systems Principles\nCS 529: Robotics and Autonomous Systems Seminar\nBIO 150: Human Behavioral Biology\nBIOE 131: Ethics in Bionengineering\nEE 292I: Insanely Great Products: How do they get built?\n\n\n\n\n\nCS 109: Introduction to Probability for Computer Scientists\nMath 51: Linear Algebra, Multivariable Calculus, and Modern Applications\nPWR 2SPB: Hope, Health, and Healing: The Rhetoric of Medicine\nCS 22A: The Social & Economic Impact of Artificial Intelligence\n\n\n\n\n\nCS 107: Computer Organization and Systems\nENGR 108: Introduction to Matrix Methods\nCS 279: Computational Biology: Structure and Organization of Biomolecules and Cells\nCS 528: Machine Learning Systems Seminar\nMS&E 472: Entrepreneurial Thought Leaders’ Seminar\nPEDS 220: Covid-19 Elective\n\n\n\n\n\nCS 103: Mathematical Foundations of Computing\nBIOE 70Q: Medical Device Innovation\nECON 23N: Capitalism, Socialism and Democracy\nTHINK 23: The Cancer Problem\nCS 41: Hap.py Code: The Python Programming Language Winter 2021\n\n\n\n\n\nCS 106B: Programming Abstractions\nPWR 1CK: Investigating the News: Journalism, Technology & the Future\nPSYC 199: Undergraduate Research\nMS&E 472: Entrepreneurial Thought Leaders’ Seminar\n\n\n\n\n\nSYMSYS 1: Minds and Machines\nCS 106A: Programming Methodology\nMath 21: Calculus II\nMATSCI 83N: Great Inventions that Matter\nCS 523: Seminar in Artificial Intelligence in Healthcare\nEDUC 157: Election 2020"
  },
  {
    "objectID": "pages/coursework.html#high-school",
    "href": "pages/coursework.html#high-school",
    "title": "Coursework",
    "section": "High School",
    "text": "High School\nSome relevant coursework from high school:\n\nMultivariable Calculus (12th)\nHonors Computer Science (10th)\nIntroduction to Data Structures and Algorithms (12th)\nAP Computer Science A (11th)\nAP Computer Science Principles (11th)\nAP Calculus (11th)"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "A Quick Workflow for Incorporating Images into your Markdown Documents using VS Code\n\n\n\n\n\n\n\n\n\nSep 30, 2022\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  }
]